<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.park.mapper.PilVipComplainMapper">
  <resultMap id="BaseResultMap" type="cn.park.pojo.PilVipComplain">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="vid" jdbcType="VARCHAR" property="vid" />
    <result column="complain_time" jdbcType="TIMESTAMP" property="complainTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="aid" jdbcType="INTEGER" property="aid" />
    <result column="advice" jdbcType="VARCHAR" property="advice" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.park.pojo.PilVipComplain">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, vid, complain_time, status, aid, advice
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.park.pojo.PilVipComplainExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from pil_vip_complain
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.park.pojo.PilVipComplainExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pil_vip_complain
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from pil_vip_complain
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pil_vip_complain
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.park.pojo.PilVipComplainExample">
    delete from pil_vip_complain
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.park.pojo.PilVipComplain">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pil_vip_complain (vid, complain_time, status, 
      aid, advice, content
      )
    values (#{vid,jdbcType=VARCHAR}, #{complainTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, 
      #{aid,jdbcType=INTEGER}, #{advice,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.park.pojo.PilVipComplain">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pil_vip_complain
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="vid != null">
        vid,
      </if>
      <if test="complainTime != null">
        complain_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="aid != null">
        aid,
      </if>
      <if test="advice != null">
        advice,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="vid != null">
        #{vid,jdbcType=VARCHAR},
      </if>
      <if test="complainTime != null">
        #{complainTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="aid != null">
        #{aid,jdbcType=INTEGER},
      </if>
      <if test="advice != null">
        #{advice,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.park.pojo.PilVipComplainExample" resultType="java.lang.Integer">
    select count(*) from pil_vip_complain
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pil_vip_complain
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.vid != null">
        vid = #{record.vid,jdbcType=VARCHAR},
      </if>
      <if test="record.complainTime != null">
        complain_time = #{record.complainTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.aid != null">
        aid = #{record.aid,jdbcType=INTEGER},
      </if>
      <if test="record.advice != null">
        advice = #{record.advice,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update pil_vip_complain
    set id = #{record.id,jdbcType=INTEGER},
      vid = #{record.vid,jdbcType=VARCHAR},
      complain_time = #{record.complainTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR},
      aid = #{record.aid,jdbcType=INTEGER},
      advice = #{record.advice,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pil_vip_complain
    set id = #{record.id,jdbcType=INTEGER},
      vid = #{record.vid,jdbcType=VARCHAR},
      complain_time = #{record.complainTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR},
      aid = #{record.aid,jdbcType=INTEGER},
      advice = #{record.advice,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.park.pojo.PilVipComplain">
    update pil_vip_complain
    <set>
      <if test="vid != null">
        vid = #{vid,jdbcType=VARCHAR},
      </if>
      <if test="complainTime != null">
        complain_time = #{complainTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="aid != null">
        aid = #{aid,jdbcType=INTEGER},
      </if>
      <if test="advice != null">
        advice = #{advice,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.park.pojo.PilVipComplain">
    update pil_vip_complain
    set vid = #{vid,jdbcType=VARCHAR},
      complain_time = #{complainTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      aid = #{aid,jdbcType=INTEGER},
      advice = #{advice,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.park.pojo.PilVipComplain">
    update pil_vip_complain
    set vid = #{vid,jdbcType=VARCHAR},
      complain_time = #{complainTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      aid = #{aid,jdbcType=INTEGER},
      advice = #{advice,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>